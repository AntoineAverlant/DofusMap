package com.ademe.mapretro.utils.divers

import com.ademe.mapretro.R
import com.ademe.mapretro.utils.marker.Marker
import com.ademe.mapretro.utils.marker.MarkerType

val markerTaverne = listOf(
    Marker(
        R.string.tav_panda,
        R.string.pandala_neutre,
        25,
        -35,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_bagru,
        R.string.bonta,
        -32,
        -60,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_chop,
        R.string.bonta,
        -29,
        -60,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_fera,
        R.string.bonta,
        -26,
        -58,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_alak,
        R.string.bonta,
        -30,
        -56,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_feub,
        R.string.bonta,
        -27,
        -56,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_pin,
        R.string.bonta,
        -27,
        -50,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_tab,
        R.string.bonta,
        -32,
        -51,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav,
        R.string.astrub_cite,
        5,
        -17,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_rip,
        R.string.sufokia,
        5,
        -17,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_alt,
        R.string.brakmar,
        -29,
        32,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_bwork,
        R.string.brakmar,
        -22,
        31,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_djaul,
        R.string.brakmar,
        -23,
        36,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_cha,
        R.string.brakmar,
        -28,
        40,
        MarkerType.TAVERNE
    ),
    Marker(
        R.string.tav_mis,
        R.string.brakmar,
        -21,
        39,
        MarkerType.TAVERNE
    )
)
